# -*- coding: utf-8 -*-
"""Sentiment_Analysis_User_Reviews.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14YUpczTWI5wuyyQe6VPWgBVBboBn_SgO
"""

import nltk
import numpy as np
from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize
from nltk.stem import WordNetLemmatizer
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
from sklearn.calibration import CalibratedClassifierCV

nltk.download("punkt")
nltk.download("stopwords")
nltk.download("wordnet")

import pandas as pd
df = pd.read_csv('reviews.csv')

lemmatizer = WordNetLemmatizer()
stop_words = set(stopwords.words("english"))

def preprocess_text(text):
    words = word_tokenize(text)
    words = [word.lower() for word in words if word.isalnum() and word.lower() not in stop_words]
    words = [lemmatizer.lemmatize(word) for word in words]
    return ' '.join(words)

df['Review'] = df['Review'].apply(preprocess_text)

X = df['Review']
y = df['Sentiment']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

vectorizer = TfidfVectorizer()
X_train_vec = vectorizer.fit_transform(X_train)
X_test_vec = vectorizer.transform(X_test)

classifier = MultinomialNB()
calibrated_classifier = CalibratedClassifierCV(base_estimator=classifier, method='sigmoid')
calibrated_classifier.fit(X_train_vec, y_train)

y_pred = calibrated_classifier.predict(X_test_vec)
y_prob = calibrated_classifier.predict_proba(X_test_vec)

new_review = "Terrible experience, waste of money	"
new_review_vec = vectorizer.transform([preprocess_text(new_review)])
predicted_sentiment = calibrated_classifier.predict(new_review_vec)[0]
confidence_level = np.max(calibrated_classifier.predict_proba(new_review_vec))

if predicted_sentiment == "Negative":
  confidence_level = 1 - confidence_level

#print("\nPredicted Sentiment:", predicted_sentiment)
print("Confidence Level:", confidence_level)