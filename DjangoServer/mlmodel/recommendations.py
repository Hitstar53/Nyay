# -*- coding: utf-8 -*-
"""Recommender_System_using_TFIDF.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fl5xWkzLW8b5X170JztN7RUUj56XSe8J
"""

import pandas as pd
from io import StringIO
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import linear_kernel

def get_recommendations(user_problems_df, top_n=5):
  legal_practitioners_df = pd.read_csv('legal_practitioners.csv')
  tfidf_vectorizer = TfidfVectorizer(stop_words='english')
  user_problems_matrix = tfidf_vectorizer.fit_transform(user_problems_df['Problem'])
  legal_practitioners_matrix = tfidf_vectorizer.transform(legal_practitioners_df['Description'])
  cosine_sim = linear_kernel(user_problems_matrix, legal_practitioners_matrix)
  sim_scores = list(enumerate(cosine_sim[0]))
  sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)
  sim_scores = sim_scores[0:top_n]
  practitioner_indices = [i[0] for i in sim_scores]
  return legal_practitioners_df.iloc[practitioner_indices]

def calc(prob):
  # prob = input("Enter your legal problem: \n")
  prob = "Problem\n" + prob
  input_data = StringIO(prob)
  user_problems_df = pd.read_csv(input_data)
  recommendations = get_recommendations(user_problems_df)
  print("\n")
  return recommendations.to_dict(orient="records")